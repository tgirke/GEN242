<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GEN242 – Projects</title>
    <link>/assignments/projects/</link>
    <description>Recent content in Projects on GEN242</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/assignments/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Assignments: Overview of Course Projects</title>
      <link>/assignments/projects/project_overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/project_overview/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;During the tutorial sessions of this class all students will perform the basic
data analysis of at least two NGS Workflows including RNA-Seq and ChIP-Seq (or ATAC-Seq).
In addition, every student will work on a Challenge
Project addressing a specific data analysis task within one of the general NGS
Workflows. Students will also present a scientific paper closely related to
their challenge topic (see
&lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/assignments/presentations/paper_presentations/&#34;&gt;here&lt;/a&gt;).
To facilitate teamwork and communication with instructors, each course project will be
assigned a private GitHub repository.&lt;/p&gt;
&lt;p&gt;The results of the Challenge Projects will be presented by each student
during the last week of the course (see Slideshow Template
&lt;a href=&#34;https://docs.google.com/presentation/d/1XxV5kseWrmPuLzk0x64_sRFDunyg40iMF2qSUCJ2vPE/edit?usp=sharing&#34;&gt;here&lt;/a&gt;).
In addition, each student will write a detailed analysis report for the assigned
course project. This report needs to include all analysis steps of the
corresponding NGS Workflow (&lt;em&gt;e.g.&lt;/em&gt; full RNA-Seq analysis) as well as the
code and results of the Challenge Project. The final project reports will be written
in R Markdown. A basic tutorial on R Markdown is available &lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/tutorials/rmarkdown/rmarkdown/&#34;&gt;here&lt;/a&gt;.
Both the R Markdown script (&lt;code&gt;.Rmd&lt;/code&gt;) along with the rendered HTML or PDF report will
be submitted to each student&amp;rsquo;s private GitHub repository. All helper code used for
the challenge project needs to be organized as well documented R functions in each
project&amp;rsquo;s &lt;code&gt;*_Fct.R&lt;/code&gt; script. The expected structure of the final project report is outlined below.&lt;/p&gt;
&lt;p&gt;The reports should be submitted to each student’s private GitHub repository that
was used to submit the homework assignments. For the report each student should create in
this repository a new directory named &lt;code&gt;ProjectReport&lt;/code&gt; and include in it the
following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Rmd&lt;/code&gt; source script of project report&lt;/li&gt;
&lt;li&gt;Report rendered from &lt;code&gt;.Rmd&lt;/code&gt; source in HTML or PDF format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;._Fct.R&lt;/code&gt; file containing all helper functions written for challenge project&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Submission Deadline&lt;/strong&gt; for reports: 6:00 PM, June 7th, 2022&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;structure-of-final-project-report&#34;&gt;Structure of final project report&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Abstract&lt;/li&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Methods
&lt;ul&gt;
&lt;li&gt;Short description of methods used by NGS workflow&lt;/li&gt;
&lt;li&gt;Detailed description of methods used for challenge project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Results and Discussion
&lt;ul&gt;
&lt;li&gt;Includes all components of NGS workflow as well as challenge project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conclusions&lt;/li&gt;
&lt;li&gt;Acknowledgments&lt;/li&gt;
&lt;li&gt;References&lt;/li&gt;
&lt;li&gt;Supplement (optional)&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: RNA-Seq - NGS Aligners</title>
      <link>/assignments/projects/01_rnaseq_aligners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/01_rnaseq_aligners/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;rna-seq-workflow&#34;&gt;RNA-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Map reads against reference genome&lt;/li&gt;
&lt;li&gt;Perform read counting for required ranges (&lt;em&gt;e.g.&lt;/em&gt; exonic gene ranges)&lt;/li&gt;
&lt;li&gt;Normalization of read counts&lt;/li&gt;
&lt;li&gt;Identification of differentially expressed genes (DEGs)&lt;/li&gt;
&lt;li&gt;Clustering of gene expression profiles&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-project-comparison-of-rna-seq-aligners&#34;&gt;Challenge Project: Comparison of RNA-Seq Aligners&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-7) on RNA-Seq data set from Howard et al. (2013)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Compare the RNA-Seq aligner HISAT2 with at least 1-2 other aligners, such as  Rsubread, Star or Kallisto. Evaluate the impact of the aligner on the downstream analysis results including:
&lt;ul&gt;
&lt;li&gt;Read counts&lt;/li&gt;
&lt;li&gt;Differentially expressed genes (DEGs)&lt;/li&gt;
&lt;li&gt;Generate plots to compare the results efficiently&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bray NL, Pimentel H, Melsted P, Pachter L (2016) Near-optimal probabilistic RNA-seq quantification. Nat Biotechnol. doi: 10.1038/nbt.3519 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/27043002&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Howard, B.E. et al., 2013. High-throughput RNA sequencing of pseudomonas-infected Arabidopsis reveals hidden transcriptome complexity and novel splice variants. PloS one, 8(10), p.e74183. &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24098335&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kim D, Pertea G, Trapnell C, Pimentel H, Kelley R, Salzberg SL (2013) TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions. Genome Biol. doi: 10.1186/gb-2013-14-4-r36 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/23618408&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kim D, Langmead B, Salzberg SL (2015) HISAT: a fast spliced aligner with low memory requirements. Nat Methods 12: 357–360 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/25751142&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Liao Y, Smyth GK, Shi W (2013) The Subread aligner: fast, accurate and scalable read mapping by seed-and-vote. Nucleic Acids Res 41: e108 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/23558742&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: RNA-Seq - DEG Analysis Methods</title>
      <link>/assignments/projects/02_rnaseq_deg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/02_rnaseq_deg/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;rna-seq-workflow&#34;&gt;RNA-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Map reads against reference genome&lt;/li&gt;
&lt;li&gt;Perform read counting for required ranges (&lt;em&gt;e.g.&lt;/em&gt; exonic gene ranges)&lt;/li&gt;
&lt;li&gt;Normalization of read counts&lt;/li&gt;
&lt;li&gt;Identification of differentially expressed genes (DEGs)&lt;/li&gt;
&lt;li&gt;Clustering of gene expression profiles&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-projects&#34;&gt;Challenge Projects&lt;/h2&gt;
&lt;h3 id=&#34;1-comparison-of-deg-analysis-methods&#34;&gt;1. Comparison of DEG analysis methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-7) on RNA-Seq data set from Howard et al. (2013)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Compare the DEG analysis method chosen for paper presentation with at least 1-2 additional methods (&lt;em&gt;e.g.&lt;/em&gt; one student compares &lt;em&gt;edgeR&lt;/em&gt; &lt;em&gt;vs.&lt;/em&gt; &lt;em&gt;baySeq&lt;/em&gt;, and other student &lt;em&gt;DESeq2&lt;/em&gt; &lt;em&gt;vs.&lt;/em&gt; &lt;em&gt;limma/voom&lt;/em&gt;). Assess the results as follows:
&lt;ul&gt;
&lt;li&gt;Analyze the similarities and differences in the DEG lists obtained from the two methods using intersect matrices, venn diagrams and/or upset plots.&lt;/li&gt;
&lt;li&gt;Assess the impact of the DEG method on the downstream gene set enrichment analysis?&lt;/li&gt;
&lt;li&gt;Plot the performance of the DEG methods in form of ROC curves and/or record their AUC values. A consensus DEG set or the one from the Howard et al. (2013) paper could be used as a ‘pseudo’ ground truth result.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-comparison-of-deg-analysis-methods&#34;&gt;2. Comparison of DEG analysis methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of DEG methods and/or performance testing approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Howard, B.E. et al., 2013. High-throughput RNA sequencing of pseudomonas-infected Arabidopsis reveals hidden transcriptome complexity and novel splice variants. PloS one, 8(10), p.e74183. &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24098335&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Guo Y, Li C-I, Ye F, Shyr Y (2013) Evaluation of read count based RNAseq analysis methods. BMC Genomics 14 Suppl 8: S2 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24564449&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hardcastle TJ, Kelly KA (2010) baySeq: empirical Bayesian methods for identifying differential expression in sequence count data. BMC Bioinformatics 11: 422 &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20698981/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Liu R, Holik AZ, Su S, Jansz N, Chen K, Leong HS, Blewitt ME, Asselin-Labat M-L, Smyth GK, Ritchie ME (2015) Why weight? Modelling sample and observational level variability improves power in RNA-seq analyses. Nucleic Acids Res. doi: 10.1093/nar/gkv412. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/25925576/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Love MI, Huber W, Anders S (2014) Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biol 15: 550 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/25516281&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zhou X, Lindsay H, Robinson MD (2014) Robustly detecting differential expression in RNA sequencing data using observation weights. Nucleic Acids Res 42: e91 &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24753412&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Cluster and Network Analysis Methods</title>
      <link>/assignments/projects/03_cluster_analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/03_cluster_analysis/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;rna-seq-workflow&#34;&gt;RNA-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Map reads against reference genome&lt;/li&gt;
&lt;li&gt;Perform read counting for required ranges (&lt;em&gt;e.g.&lt;/em&gt; exonic gene ranges)&lt;/li&gt;
&lt;li&gt;Normalization of read counts&lt;/li&gt;
&lt;li&gt;Identification of differentially expressed genes (DEGs)&lt;/li&gt;
&lt;li&gt;Clustering of gene expression profiles&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-projects&#34;&gt;Challenge Projects&lt;/h2&gt;
&lt;h3 id=&#34;1-cluster-and-network-analysis-methods&#34;&gt;1. Cluster and network analysis methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-7) on RNA-Seq data set from Howard et al. (2013)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Compare at least 2-3 cluster analysis methods (e.g. hierarchical, k-means, Fuzzy C-Means, WGCNA, other) and assess the performance differences as follows:
&lt;ul&gt;
&lt;li&gt;Analyze the similarities and differences in the cluster groupings obtained from the two methods.&lt;/li&gt;
&lt;li&gt;Do the differences affect the results of the downstream functional enrichment analysis?&lt;/li&gt;
&lt;li&gt;Plot the performance of the clustering methods in form of ROC curves and/or record their AUC values. Functional annotations (e.g. GO, KEGG, Pfam) could be used as a benchmark for defining true results.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-cluster-and-network-analysis-methods&#34;&gt;2. Cluster and network analysis methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of clustering methods and/or performance testing approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Howard, B.E. et al., 2013. High-throughput RNA sequencing of pseudomonas-infected Arabidopsis reveals hidden transcriptome complexity and novel splice variants. PloS one, 8(10), p.e74183. &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24098335&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Langfelder P, Luo R, Oldham MC, Horvath S (2011) Is my network module preserved and reproducible? PLoS Comput Biol 7: e1001057. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/21283776/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Langfelder P, Horvath S (2008) WGCNA: an R package for weighted correlation network analysis. BMC Bioinformatics 9: 559–559. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/19114008/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rodriguez MZ, Comin CH, Casanova D, Bruno OM, Amancio DR, Costa L da F, Rodrigues FA (2019) Clustering algorithms: A comparative approach. PLoS One 14: e0210236. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/30645617/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Embedding Methods for scRNA-Seq</title>
      <link>/assignments/projects/04_scrnaseq_embedding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/04_scrnaseq_embedding/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;rna-seq-workflow&#34;&gt;RNA-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Map reads against reference genome&lt;/li&gt;
&lt;li&gt;Perform read counting for required ranges (&lt;em&gt;e.g.&lt;/em&gt; exonic gene ranges)&lt;/li&gt;
&lt;li&gt;Normalization of read counts&lt;/li&gt;
&lt;li&gt;Identification of differentially expressed genes (DEGs)&lt;/li&gt;
&lt;li&gt;Clustering of gene expression profiles&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-projects&#34;&gt;Challenge Projects&lt;/h2&gt;
&lt;h3 id=&#34;1-embedding-methods-for-scrna-seq&#34;&gt;1. Embedding Methods for scRNA-Seq&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-7) on RNA-Seq data set from Howard et al. (2013)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Compare the partition performance of at least 3 embedding methods for high-dimensional gene expression data using single cell RNA-Seq data. The dimensionality reduction methods can include PCA, MDS, &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/SC3.html&#34;&gt;SC3&lt;/a&gt;, &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/RDRToolbox.html&#34;&gt;isomap&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/Rtsne/&#34;&gt;t-SNE&lt;/a&gt;, &lt;a href=&#34;https://github.com/KlugerLab/FIt-SNE&#34;&gt;FIt-SNE&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/umap/index.html&#34;&gt;UMAP&lt;/a&gt;, &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/vignettes/scater/inst/doc/overview.html&#34;&gt;runUMAP in scater Bioc package&lt;/a&gt;, etc.&lt;/li&gt;
&lt;li&gt;To obtain meaningful test results, choose an scRNA-Seq data set (here pre-processed count data) where the correct cell clustering is known (ground truth). For simplicity the data could be obtained from the &lt;a href=&#34;https://bioconductor.org/packages/release/data/experiment/html/scRNAseq.html&#34;&gt;scRNAseq&lt;/a&gt; package (Risso and Cole, 2020) or loaded from GEO (e.g. Shulse et al., 2019). For learning purposes, organize the data in a &lt;a href=&#34;https://bioconductor.org/packages/3.12/bioc/html/SingleCellExperiment.html&#34;&gt;SingleCellExperiment&lt;/a&gt; object. How to work with &lt;code&gt;SingleCellExperiment&lt;/code&gt; objects with embedding methods like t-SNE the tutorial (&lt;a href=&#34;https://bioconductor.org/packages/3.12/bioc/vignettes/scran/inst/doc/scran.html&#34;&gt;here&lt;/a&gt;) of the scran package provides an excellent introduction.&lt;/li&gt;
&lt;li&gt;Optional: plot the (partitioning) performance in form of ROC curves and/or record their AUC values.&lt;/li&gt;
&lt;li&gt;Compare your test results with published performance test results, e.g. Sun et al. (2019) or Duò et al. (2018).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-embedding-methods-for-scrna-seq&#34;&gt;2. Embedding Methods for scRNA-Seq&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of embedding methods and/or performance testing approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-embedding-methods-for-scrna-seq&#34;&gt;3. Embedding Methods for scRNA-Seq&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of embedding methods and/or performance testing approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Duò A, Robinson MD, Soneson C (2018) A systematic performance evaluation of clustering methods for single-cell RNA-seq data. F1000Res 7: 1141. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/30271584/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Howard, B.E. et al., 2013. High-throughput RNA sequencing of pseudomonas-infected Arabidopsis reveals hidden transcriptome complexity and novel splice variants. PloS one, 8(10), p.e74183. &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24098335&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kiselev VY, Kirschner K, Schaub MT, Andrews T, Yiu A, Chandra T, Natarajan KN, Reik W, Barahona M, Green AR, et al (2017) SC3: consensus clustering of single-cell RNA-seq data. Nat Methods 14: 483–486. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/28346451/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;L.J.P. van der Maaten and G.E. Hinton. Visualizing High-Dimensional Data Using t-SNE. Journal of Machine Learning Research 9 (Nov) : 2579-2605, 2008.&lt;/li&gt;
&lt;li&gt;Linderman GC, Rachh M, Hoskins JG, Steinerberger S, Kluger Y (2019) Fast interpolation-based t-SNE for improved visualization of single-cell RNA-seq data. Nat Methods 16: 243–245 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6402590/&#34;&gt;PubMed&lt;/a&gt; (Note: this could be used as a more recent pub on t-SNE; the speed improved version is also available for R with a C)&lt;/li&gt;
&lt;li&gt;McInnes L, Healy J, Melville J (2018) UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction. &lt;a href=&#34;https://arxiv.org/abs/1802.03426&#34;&gt;arXiv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Risso D, Cole M (2020). scRNAseq: Collection of Public Single-Cell RNA-Seq Datasets. R package version 2.4.0. -&amp;gt; Choose one scRNA-Seq data set from this Bioc data package for testing embedding methods. &lt;a href=&#34;https://bioconductor.org/packages/release/data/experiment/html/scRNAseq.html&#34;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Senabouth A, Lukowski SW, Hernandez JA, Andersen SB, Mei X, Nguyen QH, Powell JE (2019) ascend: R package for analysis of single-cell RNA-seq data. Gigascience. doi: 10.1093/gigascience/giz087. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/31505654/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shulse CN, Cole BJ, Ciobanu D, Lin J, Yoshinaga Y, Gouran M, Turco GM, Zhu Y, O’Malley RC, Brady SM, et al (2019) High-Throughput Single-Cell Transcriptome Profiling of Plant Cell Types. Cell Rep 27: 2241–2247.e4 &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/31091459/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sun S, Zhu J, Ma Y, Zhou X (2019) Accuracy, robustness and scalability of dimensionality reduction methods for single-cell RNA-seq analysis. Genome Biol 20: 269. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/31823809/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sun S, Zhu J, Zhou X (2020) Statistical analysis of spatial expression patterns for spatially resolved transcriptomic studies. Nat Methods. doi: 10.1038/s41592-019-0701-7. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/31988518/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: ChIP-Seq Peak Callers</title>
      <link>/assignments/projects/05_chipseq_peakcaller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/05_chipseq_peakcaller/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;chip-seq-workflow&#34;&gt;ChIP-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Align reads to reference genome&lt;/li&gt;
&lt;li&gt;Compute read coverage across genome&lt;/li&gt;
&lt;li&gt;Peak calling with different methods and consensus peak identification&lt;/li&gt;
&lt;li&gt;Annotate peaks&lt;/li&gt;
&lt;li&gt;Differential binding analysis&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;li&gt;Motif prediction to identify putative TF binding sites&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-projects&#34;&gt;Challenge Projects&lt;/h2&gt;
&lt;h3 id=&#34;1-comparison-of-peak-calling-methods&#34;&gt;1. Comparison of peak calling methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-8) on ChIP-Seq data set from Kaufman et al. (2010)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Call peaks with at least 2-3 software tools, such as MACS2, PeakSeq, F-Seq, Homer, ChIPseqR, or CSAR.&lt;/li&gt;
&lt;li&gt;Compare the results from with peaks identified by Kaufmann et al (2010)&lt;/li&gt;
&lt;li&gt;Report unique and common peaks among three methods and plot the results as venn diagrams&lt;/li&gt;
&lt;li&gt;Plot the performance of the peak callers in form of ROC plots. As true result set one can use the intersect of the peaks identified by all methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-comparison-of-peak-calling-methods&#34;&gt;2. Comparison of peak calling methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of peak calling methods and/or performance testing approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Feng J, Liu T, Qin B, Zhang Y, Liu XS (2012) Identifying ChIP-seq enrichment using MACS. Nat Protoc 7: 1728–1740. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/22936215/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kaufmann, K, F Wellmer, J M Muiño, T Ferrier, S E Wuest, V Kumar, A Serrano-Mislata, et al. 2010. “Orchestration of Floral Initiation by APETALA1.” Science 328 (5974): 85–89. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20360106/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Landt SG, Marinov GK, Kundaje A, Kheradpour P, Pauli F, Batzoglou S, Bernstein BE, Bickel P, Brown JB, Cayting P, et al (2012) ChIP-seq guidelines and practices of the ENCODE and modENCODE consortia. Genome Res 22: 1813–1831. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/22955991/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lun ATL, Smyth GK (2014) De novo detection of differentially bound regions for ChIP-seq data using peaks and windows: controlling error rates correctly. Nucleic Acids Res 42: e95. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/24852250/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Muiño JM, Kaufmann K, van Ham RC, Angenent GC, Krajewski P (2011) ChIP-seq Analysis in R (CSAR): An R package for the statistical detection of protein-bound genomic regions. Plant Methods 7: 11. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/21554688/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wilbanks EG, Facciotti MT (2010) Evaluation of algorithm performance in ChIP-seq peak detection. PLoS One. doi: 10.1371/journal.pone.0011471. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20628599/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zhang Y, Liu T, Meyer CA, Eeckhoute J, Johnson DS, Bernstein BE, Nussbaum C, Myers RM, Brown M, Li W, et al (2008) Model-based analysis of ChIP-Seq (MACS). Genome Biol. doi: 10.1186/gb-2008-9-9-r137. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/18798982/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Functional enrichment analysis (FEA)</title>
      <link>/assignments/projects/06_functional_enrichment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/06_functional_enrichment/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;chip-seq-workflow&#34;&gt;ChIP-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Align reads to reference genome&lt;/li&gt;
&lt;li&gt;Compute read coverage across genome&lt;/li&gt;
&lt;li&gt;Peak calling with different methods and consensus peak identification&lt;/li&gt;
&lt;li&gt;Annotate peaks&lt;/li&gt;
&lt;li&gt;Differential binding analysis&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;li&gt;Motif prediction to identify putative TF binding sites&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-project-functional-enrichment-analysis-fea&#34;&gt;Challenge Project: Functional enrichment analysis (FEA)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-8) on ChIP-Seq data set from Kaufman et al. (2010)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Perform functional enrichment analysis on the genes overlapping or downstream of the peak ranges discovered by the ChIP-Seq workflow.&lt;/li&gt;
&lt;li&gt;Compare at least 2 functional enrichment methods (&lt;em&gt;e.g.&lt;/em&gt; &lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/systemPipeR.html&#34;&gt;GOCluster_Report&lt;/a&gt;, &lt;a href=&#34;https://bioconductor.org/packages/3.12/bioc/html/fgsea.html&#34;&gt;fgsea&lt;/a&gt;, chipenrich, goseq, GOstats) using KEGG/Reactome or Gene Ontology as functional annotation systems. Among the FEA methods include one based on  the hypergeometric distribution (ORA) and one on the Gene Set Enrichment Analysis (GSEA) algorithm. Assess the results as follows:
&lt;ul&gt;
&lt;li&gt;Quantify the rank-based similarities of the functional categories among the chosen enrichment methods.&lt;/li&gt;
&lt;li&gt;Determine whether the enrichment results match the biological expectations of the experiment (e.g. are certain biological processes enriched)?&lt;/li&gt;
&lt;li&gt;Optional: visualize the results with one of the pathway or GO graph viewing tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaufmann, K, F Wellmer, J M Muiño, T Ferrier, S E Wuest, V Kumar, A Serrano-Mislata, et al. 2010. “Orchestration of Floral Initiation by APETALA1.” Science 328 (5974): 85–89. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20360106/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sergushichev A (2016) An algorithm for fast preranked gene set enrichment analysis using cumulative statistic calculation. &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/060012v3&#34;&gt;bioRxiv 060012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Subramanian A, Tamayo P, Mootha VK, Mukherjee S, Ebert BL, Gillette MA, Paulovich A, Pomeroy SL, Golub TR, Lander ES, et al (2005) Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles. Proc Natl Acad Sci U S A 102: 15545–15550. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/16199517/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Welch RP, Lee C, Imbriano PM, Patil S, Weymouth TE, Smith RA, Scott LJ, Sartor MA (2014) ChIP-Enrich: gene set enrichment testing for ChIP-seq data. Nucleic Acids Res 42: e105. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/24878920/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Young MD, Wakefield MJ, Smyth GK, Oshlack A (2010) Gene ontology analysis for RNA-seq: accounting for selection bias. Genome Biol 11: R14. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20132535/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Motif Enrichment Analysis (MEA)</title>
      <link>/assignments/projects/07_motif_enrichment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/07_motif_enrichment/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;chip-seq-workflow&#34;&gt;ChIP-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Align reads to reference genome&lt;/li&gt;
&lt;li&gt;Compute read coverage across genome&lt;/li&gt;
&lt;li&gt;Peak calling with different methods and consensus peak identification&lt;/li&gt;
&lt;li&gt;Annotate peaks&lt;/li&gt;
&lt;li&gt;Differential binding analysis&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;li&gt;Motif prediction to identify putative TF binding sites&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-projects&#34;&gt;Challenge Projects&lt;/h2&gt;
&lt;h3 id=&#34;1-functional-enrichment-analysis-fea&#34;&gt;1. Functional enrichment analysis (FEA)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-8) on ChIP-Seq data set from Kaufman et al. (2010)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;Prioritize/rank peaks by FDR from differential binding analysis&lt;/li&gt;
&lt;li&gt;Parse peak sequences from genome&lt;/li&gt;
&lt;li&gt;Determine which motifs in the Jaspar database (&lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/MotifDb.html&#34;&gt;motifDB&lt;/a&gt;) show the highest enrichment in the peak sequences. The motif enrichment tests can be performed with the &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/PWMEnrich.html&#34;&gt;PWMEnrich&lt;/a&gt; package. Basic starter code for accomplishing these tasks is provided &lt;a href=&#34;https://gist.github.com/tgirke/df6fe20c2e42e71a7ade04941d4a05e9&#34;&gt;here&lt;/a&gt;. The motif mapping can be performed with &lt;a href=&#34;http://bioconductor.org/packages/3.12/bioc/html/Biostrings.html&#34;&gt;matchPWM&lt;/a&gt; or &lt;a href=&#34;http://bioconductor.org/packages/3.12/bioc/html/motifmatchr.html&#34;&gt;motifmatcher&lt;/a&gt;, and motif identification in databases can be performed with &lt;a href=&#34;https://bioconductor.org/packages/3.12/bioc/html/MotIV.html&#34;&gt;MotIV&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To have distinct challenge project aspects for each of the two students in this project, one could use different peak ranking approaches, e.g. one ranks by FDR of differential binding analysis, and the other by coverage or p-values of peak caller.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-functional-enrichment-analysis-fea&#34;&gt;2. Functional enrichment analysis (FEA)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Similar as above but with different combination of enrichment and/or testing methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Frith, Martin C., Yutao Fu, Liqun Yu, Jiang‐fan Chen, Ulla Hansen, and Zhiping Weng. 2004. “Detection of Functional DNA Motifs via Statistical Over‐representation.” Nucleic Acids Research 32 (4): 1372–81. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/14988425/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kaufmann, K, F Wellmer, J M Muiño, T Ferrier, S E Wuest, V Kumar, A Serrano-Mislata, et al. 2010. “Orchestration of Floral Initiation by APETALA1.” Science 328 (5974): 85–89. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20360106/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Machanick P, Bailey TL (2011) MEME-ChIP: motif analysis of large DNA datasets. Bioinformatics 27: 1696–1697. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/21486936/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;McLeay, Robert C, and Timothy L Bailey. 2010. “Motif Enrichment Analysis: A Unified Framework and an Evaluation on ChIP Data.” BMC Bioinformatics 11: 165. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20356413/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tompa, M, N Li, T L Bailey, G M Church, B De Moor, E Eskin, A V Favorov, et al. 2005. “Assessing Computational Tools for the Discovery of Transcription Factor Binding Sites.” Nature Biotechnology 23 (1): 137–44. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/15637633/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alipanahi B, Delong A, Weirauch MT, Frey BJ (2015) Predicting the sequence specificities of DNA- and RNA-binding proteins by deep learning. Nat Biotechnol 33: 831–838. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/26213851/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Genome Summary Graphics</title>
      <link>/assignments/projects/08_genome_graphics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/08_genome_graphics/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;chip-seq-workflow&#34;&gt;ChIP-Seq Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read quality assessment, filtering and trimming&lt;/li&gt;
&lt;li&gt;Align reads to reference genome&lt;/li&gt;
&lt;li&gt;Compute read coverage across genome&lt;/li&gt;
&lt;li&gt;Peak calling with different methods and consensus peak identification&lt;/li&gt;
&lt;li&gt;Annotate peaks&lt;/li&gt;
&lt;li&gt;Differential binding analysis&lt;/li&gt;
&lt;li&gt;Gene set enrichment analysis&lt;/li&gt;
&lt;li&gt;Motif prediction to identify putative TF binding sites&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;challenge-project-programmable-graphics-for-visualizing-genomic-features&#34;&gt;Challenge Project: Programmable graphics for visualizing genomic features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Run workflow from start to finish (steps 1-8) on ChIP-Seq data set from Kaufman et al. (2010)&lt;/li&gt;
&lt;li&gt;Challenge project tasks
&lt;ul&gt;
&lt;li&gt;This project focuses on the visualization of patterns in NGS experiments (&lt;em&gt;e.g.&lt;/em&gt; consensus motifs in ChIP-Seq peaks) to discover novel features in genomes. The visualization backend should be based on one of the programmable and extendable R/Bioconductor environments such as &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;ggplot2&lt;/a&gt; (&lt;a href=&#34;https://plotly.com/ggplot2/&#34;&gt;ggplotly&lt;/a&gt;), &lt;a href=&#34;https://www.bioconductor.org/packages/release/bioc/html/ggbio.html&#34;&gt;ggbio&lt;/a&gt;, &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/Gviz.html&#34;&gt;Gviz&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/RCircos/index.html&#34;&gt;RCircos&lt;/a&gt;, etc. For instance, this could include:
&lt;ul&gt;
&lt;li&gt;The generation of motif logos (&lt;em&gt;e.g.&lt;/em&gt; for ChIP-Seq peaks) for any number of sequence ranges of interest.&lt;/li&gt;
&lt;li&gt;Integration of the results with functional annotation information (&lt;em&gt;e.g.&lt;/em&gt; protein families from Pfam, exonic regions coding for disordered structures), pathways and/or GO.&lt;/li&gt;
&lt;li&gt;Incorporation of quantitative information such as relative or differential abundance information obtained from the corresponding NGS profiling technology.&lt;/li&gt;
&lt;li&gt;If there is interest, a Shiny App could be included to run the developed R functions interactively from a web browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hahne F, Ivanek R (2016). “Statistical Genomics: Methods and Protocols.” In Mathé E, Davis S (eds.), chapter Visualizing Genomic Data Using Gviz and Bioconductor, 335–351. Springer New York, New York, NY. ISBN 978-1-4939-3578-9, doi: 10.1007/978-1-4939-3578-9_16. &lt;a href=&#34;https://link.springer.com/protocol/10.1007%2F978-1-4939-3578-9_16&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kaufmann, K, F Wellmer, J M Muiño, T Ferrier, S E Wuest, V Kumar, A Serrano-Mislata, et al. 2010. “Orchestration of Floral Initiation by APETALA1.” Science 328 (5974): 85–89. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/20360106/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yin T, Cook D, Lawrence M (2012). “ggbio: an R package for extending the grammar of graphics for genomic data.” Genome Biology, 13(8), R77. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/22937822/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zhang H, Meltzer P, Davis S (2013) RCircos: an R package for Circos 2D track plots. BMC Bioinformatics 14: 244–244. &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/23937229/&#34;&gt;PubMed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Assignments: Data Management for Course Projects</title>
      <link>/assignments/projects/project_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/assignments/projects/project_data/</guid>
      <description>
        
        
        &lt;p&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;big-data-space-on-hpcc&#34;&gt;Big data space on HPCC&lt;/h2&gt;
&lt;p&gt;All larger data sets of the coure projects will be organized in a big data space under
&lt;code&gt;/bigdata/gen242/&amp;lt;user_name&amp;gt;&lt;/code&gt;. Within this space, each student will work in a subdirectory named after their project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/bigdata/gen242/&amp;lt;user_name&amp;gt;/&amp;lt;github_user_name&amp;gt;_project&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-github-repositories&#34;&gt;Project GitHub repositories&lt;/h2&gt;
&lt;p&gt;Students will work on their course projects within GitHub repositories, one for each student.
These project repositories are private and have been shared with each student.
To populate a course project with an initial project workflow, please follow the instructions
given in the following section.&lt;/p&gt;
&lt;h2 id=&#34;generate-workflow-environment-with-real-project-data&#34;&gt;Generate workflow environment with real project data&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the HPCC cluster and set your working directory to &lt;code&gt;bigdata&lt;/code&gt; or (&lt;code&gt;/bigdata/gen242/&amp;lt;user_name&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Clone the GitHub repository for your project with &lt;code&gt;git clone ...&lt;/code&gt; (URLs listed &lt;a href=&#34;https://bit.ly/3tJ3KuZ&#34;&gt;here&lt;/a&gt;) and then &lt;code&gt;cd&lt;/code&gt; into this directory. As mentioned above, the project GitHub repos follow this naming convention: &lt;code&gt;&amp;lt;github_user_name&amp;gt;_project&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Generate the workflow environment for your project on the HPCC cluster with &lt;code&gt;genWorkenvir&lt;/code&gt; from &lt;code&gt;systemPipeRdata&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Next, &lt;code&gt;cd&lt;/code&gt; into the directory of your workflow, delete its default &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;results&lt;/code&gt; directories, and then substitute them with empty directories outside of your project GitHub repos as follows:
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir ../../&amp;lt;workflow&amp;gt;_data
mkdir ../../&amp;lt;workflow&amp;gt;_results
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Within your workflow directory create symbolic links pointing to the new directories created in the previous step. For instance, the projects using the RNA-Seq workflow should create the symbolic links for their &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;results&lt;/code&gt; directories like this:
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ln -s /bigdata/gen242/&amp;lt;user_name&amp;gt;/rnaseq_data data
ln -s /bigdata/gen242/&amp;lt;user_name&amp;gt;/rnaseq_results results
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Add the workflow directory to the GitHub repository of your project with &lt;code&gt;git add -A&lt;/code&gt; and then run &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt; as outlined in the GitHub instructions of this course &lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/tutorials/github/github/#github-basics-from-command-line&#34;&gt;here&lt;/a&gt;. After this check whether the workflow directory and its content shows up on your project&amp;rsquo;s online repos on GitHub. Very important: make sure that the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;results&lt;/code&gt; are empty at this point. If not investigate why and fix the problem in the corresponding step above.&lt;/li&gt;
&lt;li&gt;Download the FASTQ files of your project with &lt;code&gt;getSRAfastq&lt;/code&gt; (see below) to the &lt;code&gt;data&lt;/code&gt; directory of your project.&lt;/li&gt;
&lt;li&gt;Generate a proper &lt;code&gt;targets&lt;/code&gt; file for your project where the first column(s) point(s) to the downloaded FASTQ files. In addition, provide sample names matching the experimental design (columns: &lt;code&gt;SampleNames&lt;/code&gt; and &lt;code&gt;Factor&lt;/code&gt;). More details about the structure of targets files are provided &lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/tutorials/systempiper/systempiper/#structure-of-targets-file&#34;&gt;here&lt;/a&gt;. Ready to use targets files for both the RNA-Seq and ChIP-Seq project can be downloaded as tab separated (TSV) files from &lt;a href=&#34;https://github.com/tgirke/GEN242/tree/main/content/en/assignments/Projects/targets_files&#34;&gt;here&lt;/a&gt;. Alternatively, one can download the corresponding Google Sheets with the &lt;code&gt;read_sheet&lt;/code&gt; function from the &lt;code&gt;googlesheets4&lt;/code&gt; package (&lt;a href=&#34;https://bit.ly/2QH19Ry&#34;&gt;RNA-Seq GSheet&lt;/a&gt; and &lt;a href=&#34;https://bit.ly/2QFjTAV&#34;&gt;ChIP-Seq GSheet&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Inspect and adjust the &lt;code&gt;.param&lt;/code&gt; files you will be using. For instance, make sure the software modules you are loading and the path to the reference genome are correct.&lt;/li&gt;
&lt;li&gt;Every time you start working on your project you &lt;code&gt;cd&lt;/code&gt; into the directory of the repository and then run &lt;code&gt;git pull&lt;/code&gt; to get the latest change. When you are done, you commit and push your changes back to GitHub with &lt;code&gt;git commit -am &amp;quot;some edits&amp;quot;; git push -u origin main&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;download-of-project-data&#34;&gt;Download of project data&lt;/h2&gt;
&lt;p&gt;After logging in to one of the computer nodes via &lt;code&gt;srun&lt;/code&gt;, open R from within the GitHub respository of your project and then run the following code section, but only those that apply to your project.&lt;/p&gt;
&lt;h3 id=&#34;fastq-files-from-sra&#34;&gt;FASTQ files from SRA&lt;/h3&gt;
&lt;h4 id=&#34;choose-fastq-data-for-your-project&#34;&gt;Choose FASTQ data for your project&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The FASTQ files for the ChIP-Seq project are from SRA study &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/sra?term=SRP002174&#34;&gt;SRP002174&lt;/a&gt; (&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/20360106&#34;&gt;Kaufman et al. 2010&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sraidv &amp;lt;- paste(&amp;quot;SRR0388&amp;quot;, 45:51, sep=&amp;quot;&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;The FASTQ files for the RNA-Seq project are from SRA study &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/sra?term=SRP010938&#34;&gt;SRP010938&lt;/a&gt; (&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/24098335&#34;&gt;Howard et al. 2013&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sraidv &amp;lt;- paste(&amp;quot;SRR4460&amp;quot;, 27:44, sep=&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;load-libraries-and-modules&#34;&gt;Load libraries and modules&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(systemPipeR)                                                                                                                                                                
moduleload(&amp;quot;sratoolkit/3.0.0&amp;quot;)                                                                                                                                                      
system(&amp;quot;vdb-config --prefetch-to-cwd&amp;quot;) # sets download default to current directory                                                                                                 
# system(&#39;prefetch --help&#39;) # helps to speed up fastq-dump                                                                                                                          
# system(&#39;fastq-dump --help&#39;) # below uses this one for backwards compatibility                                                                                                     
# system(&#39;fasterq-dump --help&#39;) # faster than fastq-dump
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;define-download-function&#34;&gt;Define download function&lt;/h4&gt;
&lt;p&gt;The following function downloads and extracts the FASTQ files for each project from SRA.
Internally, it uses the &lt;code&gt;prefetch&lt;/code&gt; and &lt;code&gt;fastq-dump&lt;/code&gt; utilities of the SRA Toolkit from NCBI.
The faster &lt;code&gt;fasterq-dump&lt;/code&gt; alternative (see comment line below) is not used here for historical reasons.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;getSRAfastq &amp;lt;- function(sraid, threads=1) {                                                                                                                                         
    system(paste(&amp;quot;prefetch&amp;quot;, sraid)) # makes download faster                                                                                                                        
    system(paste(&amp;quot;fastq-dump --split-files --gzip&amp;quot;, sraid)) # gzip option makes it slower but saves storage space                                                                   
    # system(paste(&amp;quot;fasterq-dump --threads 4 --split-files --progress &amp;quot;, sraid, &amp;quot;--outdir .&amp;quot;)) # Faster alternative to fastq-dump                                                   
    unlink(x=sraid, recursive = TRUE, force = TRUE) # deletes sra download directory                                                                                                
}    
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;run-download&#34;&gt;Run download&lt;/h4&gt;
&lt;p&gt;Note the following performs the download in serialized mode for the chosen data set and saves the extracted FASTQ files to
the current working directory.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mydir &amp;lt;- getwd(); setwd(&amp;quot;data&amp;quot;)
for(i in sraidv) getSRAfastq(sraid=i)
setwd(mydir)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, the download can be performed in parallelized mode with &lt;code&gt;BiocParallel&lt;/code&gt;. Please run this version only on one of the compute nodes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mydir &amp;lt;- getwd(); setwd(&amp;quot;data&amp;quot;)
# bplapply(sraidv, getSRAfastq, BPPARAM = MulticoreParam(workers=4))
setwd(mydir)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;download-reference-genome-and-annotation&#34;&gt;Download reference genome and annotation&lt;/h3&gt;
&lt;p&gt;The following &lt;code&gt;downloadRefs&lt;/code&gt; function downloads the &lt;em&gt;Arabidopsis thaliana&lt;/em&gt; genome sequence and GFF file from the &lt;a href=&#34;ftp://ftp.arabidopsis.org/home/tair/Genes/TAIR10_genome_release/&#34;&gt;TAIR FTP site&lt;/a&gt;.
It also assigns consistent chromosome identifiers to make them the same among both the genome sequence and the GFF file. This is
important for many analysis routines such as the read counting in the RNA-Seq workflow.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;downloadRefs &amp;lt;- function(rerun=FALSE) {
    if(rerun==TRUE) {
        library(Biostrings)
        download.file(&amp;quot;https://www.arabidopsis.org/download_files/Genes/TAIR10_genome_release/TAIR10_chromosome_files/TAIR10_chr_all.fas&amp;quot;, &amp;quot;./data/tair10.fasta&amp;quot;)
        dna &amp;lt;- readDNAStringSet(&amp;quot;./data/tair10.fasta&amp;quot;)
        names(dna) &amp;lt;- paste(rep(&amp;quot;Chr&amp;quot;, 7), c(1:5, &amp;quot;M&amp;quot;, &amp;quot;C&amp;quot;), sep=&amp;quot;&amp;quot;) # Fixes chromomse ids
        writeXStringSet(dna, &amp;quot;./data/tair10.fasta&amp;quot;)
        download.file(&amp;quot;https://www.arabidopsis.org/download_files/Genes/TAIR10_genome_release/TAIR10_gff3/TAIR10_GFF3_genes.gff&amp;quot;, &amp;quot;./data/tair10.gff&amp;quot;)
        download.file(&amp;quot;https://www.arabidopsis.org/download_files/Genes/TAIR10_genome_release/TAIR10_functional_descriptions&amp;quot;, &amp;quot;./data/tair10_functional_descriptions&amp;quot;)
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After importing/sourcing the above function, execute it as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;downloadRefs(rerun=TRUE) 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;workflow-rmd-file&#34;&gt;Workflow Rmd file&lt;/h2&gt;
&lt;p&gt;To run the actual data analysis workflows, the RNA-Seq project can use the &lt;code&gt;systemPipeRNAseq.Rmd&lt;/code&gt; file obtained from the &lt;code&gt;genWorkenvir(workflow=&#39;rnaseq&#39;)&lt;/code&gt; call directly. However,
the ChIP-Seq group should use the Rmd linked on top right corner of the ChIP-Seq tutorial &lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/tutorials/spchipseq/spchipseq/&#34;&gt;here&lt;/a&gt;
and then name the downloaded file &lt;code&gt;systemPipeChIPseq.Rmd&lt;/code&gt;. To simplify this, the ChIP-Seq group members can run from the command-line within their &lt;code&gt;chipseq&lt;/code&gt; workflow directory the
following download command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wget https://raw.githubusercontent.com/tgirke/GEN242/main/static/custom/spWFtemplates/spchipseq.Rmd -O systemPipeChIPseq.Rmd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will assign the proper file name and overwrite the preloaded version of this file that has the same name.&lt;/p&gt;
&lt;h2 id=&#34;recommendations-for-running-workflows&#34;&gt;Recommendations for running workflows&lt;/h2&gt;
&lt;h3 id=&#34;run-instructions&#34;&gt;Run instructions&lt;/h3&gt;
&lt;p&gt;The following provides recommendations and additional options to consider for
running and modifying workflows. This also includes parallelization settings
for the specific data used by the class projects. Note, additional details can
be found in this and other sections of the workflow introduction tutorial
&lt;a href=&#34;https://girke.bioinformatics.ucr.edu/GEN242/tutorials/systempiper/systempiper/#loading-workflows-from-an-r-markdown&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(systemPipeR)                                                                                                                                                                
sal &amp;lt;- SPRproject() # when running a WF for first time                                                                                                                                      
sal                                                                                                                                                                                 
sal &amp;lt;- importWF(sal, file_path = &amp;quot;systemPipeRNAseq.Rmd&amp;quot;) # populates sal with WF steps defined in Rmd                                                                                                                      
sal
sal &amp;lt;- SPRproject(resume=TRUE) # when restarting a WF, skip above steps and resume WF with this command                                                                                                                                               
getRversion() # should be 4.1.2 or 4.2.0. Note, R version can be changed with `module load ...`                                                                                                                                                     
system(&amp;quot;hostname&amp;quot;) # should return number of a compute node; if not close Nvim-R session, log in to a compute node with srun and then restart Nvim-R session                                                                                                                                                                     
# sal &amp;lt;- runWF(sal) # runs WF serialized. Not recommended since this will take much longer than parallel mode introduced below by taking advantage of resource allocation
resources &amp;lt;- list(conffile=&amp;quot;.batchtools.conf.R&amp;quot;,                                                                                                                                    
                  template=&amp;quot;batchtools.slurm.tmpl&amp;quot;,                                                                                                                                 
                  Njobs=18, # chipseq should use here number of fastq files (7 or 8)                                                                                                                                                        
                  walltime=180, ## minutes                                                                                                                                          
                  ntasks=1,                                                                                                                                                         
                  ncpus=4,                                                                                                                                                          
                  memory=4096, ## Mb                                                                                                                                                
                  partition = &amp;quot;gen242&amp;quot;                                                                                                                                              
                  )                                                                                                                                                                 
## For RNA-Seq project use:
sal &amp;lt;- addResources(sal, step = c(&amp;quot;preprocessing&amp;quot;, &amp;quot;trimming&amp;quot;, &amp;quot;hisat2_mapping&amp;quot;), resources = resources) # parallelizes time consuming computations assigned to `step` argument                                                                           
## For ChIP-Seq project use:
sal &amp;lt;- addResources(sal, step = c(&amp;quot;preprocessing&amp;quot;, &amp;quot;bowtie2_alignment&amp;quot;), resources = resources)
sal &amp;lt;- runWF(sal) # runs entire workflow; specific steps can be executed by assigning their corresponding position numbers within the workflow to the `steps` argument (see ?runWF)                                                                                                                                                               
sal &amp;lt;- renderReport(sal) # after workflow has completed render Rmd to HTML report (default name is SPR_Report.html) and view it via web browser which requires symbolic link in your ~/.html folder. 
rmarkdown::render(&amp;quot;systemPipeRNAseq.Rmd&amp;quot;, clean=TRUE, output_format=&amp;quot;BiocStyle::html_document&amp;quot;) # Alternative approach for rendering report from Rmd file instead of sal object
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;modify-a-workflow&#34;&gt;Modify a workflow&lt;/h3&gt;
&lt;p&gt;If needed one can modify existing workflow steps in a pre-populated &lt;code&gt;SYSargsList&lt;/code&gt; object, and potentially already executed WF, with the &lt;code&gt;replaceStep(sal) &amp;lt;-&lt;/code&gt; replacement function.
The following gives an example where step number 3 in a &lt;code&gt;SYSargsList&lt;/code&gt; (sal) object will be updated with modified or new code. Note, this is a generalized example where the user
needs to insert the code lines and also adjust the values assigned to the arguments: &lt;code&gt;step_name&lt;/code&gt; and &lt;code&gt;dependency&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;replaceStep(sal, step=3) &amp;lt;- LineWise(                                                                                                                                                        
    code = {                                                                                                                                                                        
        &amp;lt;&amp;lt; my modified code lines &amp;gt;&amp;gt;
        },                                                                                                                                                                          
    step_name = &amp;lt;&amp;lt; &amp;quot;my_step_name&amp;quot; &amp;gt;&amp;gt;,                                                                                                                                                        
    dependency = &amp;lt;&amp;lt; &amp;quot;my_dependency&amp;quot; &amp;gt;&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Subsequently, one can rerun the corresponding step (here 3) as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;runWF(sal, steps=3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note, any step in a workflow can only be run in isolation if its expected input exists (see &lt;code&gt;dependency&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;adding-steps-to-a-workflow&#34;&gt;Adding steps to a workflow&lt;/h3&gt;
&lt;p&gt;New steps can be added to the Rmd file of a workflow by inserting new R Markdown code chunks starting and ending with the usual &lt;code&gt;appendStep&amp;lt;-&lt;/code&gt; syntax and then creating a new
&lt;code&gt;SYSargsList&lt;/code&gt; instance with &lt;code&gt;importWF&lt;/code&gt; that contain the new step(s). To add steps to a pre-populated &lt;code&gt;SYSargsList&lt;/code&gt; object, one can use the &lt;code&gt;after&lt;/code&gt; argument of the &lt;code&gt;appendStep&amp;lt;-&lt;/code&gt;
function. The following example will add a new step after position 3 to the corresponding &lt;code&gt;sal&lt;/code&gt; object. This can be useful if a longer workflow has already been completed and
one only wants to make some refinements without re-running the entire workflow.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;appendStep(sal, after=3) &amp;lt;- &amp;lt;&amp;lt; my_step_code &amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
  </channel>
</rss>
